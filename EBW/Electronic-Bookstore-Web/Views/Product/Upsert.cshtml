@model EBW.DataAccess.ViewModels.ProductVM
@{
    ViewData["Title"] = Model.Product.Id != 0 ? "Product Editing: " + Model.Product.Title : "New Product";
}

<form method="post" asp-action="Upsert" enctype="multipart/form-data">
	<input asp-for="Product.Id" hidden />
	<input asp-for="Product.ImageUrl" hidden />
    @*<input asp-for="AuthorList" hidden />*@
	<div class="row">
        <div class="col-10 mx-auto">
			<div class="border p-3 mt-4 row">
                <div class="col-12 pb-2">
                    <h3 class="text-primary">@(Model.Product.Id != 0 ? "Editing" : "Adding") Product</h3>
                    <hr />
                </div>
                <div class="mb-3 col-6">
                    <label asp-for="Product.Title"></label>
                    <input asp-for="Product.Title" class="form-control" />
                    <span asp-validation-for="Product.Title" class="text-danger"></span>
                </div>
                <div class="mb-3 col-6">
                    <label asp-for="Product.ISBN"></label>
                    <input asp-for="Product.ISBN" class="form-control" />
                    <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.Description"></label>
                    <textarea asp-for="Product.Description" rows="3" class="form-control"></textarea>
                    <span asp-validation-for="Product.Description" class="text-danger"></span>
                </div>
                <div class="mb-3 col-4">
                    <label asp-for="Product.Author"></label>
                    <select asp-for="Product.AuthorId" asp-items="@Model.AuthorList" class="form-select">
                        <option disabled selected>--Select Author--</option>
                    </select>
                    <span asp-validation-for="Product.AuthorId" class="text-danger"></span>
                </div>
                <div class="mb-3 col-4">
                    <label asp-for="Product.Category"></label>
                    <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                        <option disabled selected>--Select Category--</option>
                    </select>
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                </div>
                <div class="mb-3 col-4">
                    <label asp-for="Product.CoverType"></label>
                    <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList" class="form-select">
                        <option disabled selected>--Select Cover Type--</option>
                    </select>
                    <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.ImageUrl"></label>
                    <input type="file" id="uploadBox" name="file" class="form-control" @*accept="image/jpeg/jpg"*@ />
                </div>
                 <div class="mb-3 col-6">
                    <label asp-for="Product.ListPrice"></label>
                    <input asp-for="Product.ListPrice" class="form-control" />
                    <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                </div>
                <div class="mb-3 col-6">
                    <label asp-for="Product.Price"></label>
                    <input asp-for="Product.Price" class="form-control" />
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <a asp-controller="Product" asp-action="Index" class="btn btn-danger" style="width:250px">Cancel</a>
                     &nbsp;&nbsp;&nbsp;&nbsp;
                    @if (Model.Product.Id != 0)
                    {
                        <button type="submit" class="btn btn-primary" style="width:250px">Edit</button>
                    }
                    else
                    {
                        <button type="submit" onclick="return ValidateInput()" class="btn btn-success" style="width:250px">Create</button>
                    }
				</div>
			</div>
		</div>
        @if (Model.Product.Id != 0)
        {
            <div class="mb-3 col-2 pt-4">
                <img src="@Model.Product.ImageUrl" class="d-block user-select-none" width="100%" style="border-radius:10px; border:2px solid #bbb9b9" />
            </div>
        }
	</div>
</form>

@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    <script>
        function ValidateInput(){
		if(document.getElementById("uploadBox").value==""){
			Swal.fire({
			  icon: 'error',
			  title: 'Oops...',
			  text: 'Please upload an Image!',
			});
			return false;
		}
		return true;
	}

            tinymce.init({
                selector: 'textarea',
                plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                mergetags_list: [
                    { value: 'First.Name', title: 'First Name' },
                    { value: 'Email', title: 'Email' },
                ]
            });

        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>
}